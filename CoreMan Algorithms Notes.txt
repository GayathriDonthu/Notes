CoreMan Algorithms

Algorithm
----------

-> An algorithm is any well-defined computational procedure that takes some value, or set of values, as input and produces some value, or set of values, as
output.
-> An algorithm is thus a sequence of computational steps that transform the input into the output.

Best algorithm for an application depends on -

-> number of items to be sorted
-> the extent to which the items are already somewhat sorted, 
-> possible restrictions on the item values,
-> the architecture of the computer, and 
-> the kind of storage devices to be used: main memory, disks, or even tapes.

-> An algorithm is said to be correct if, for every input instance, it halts with the correct output.

Data Structure
--------------

-> A data structure is a way to store and organize data in order to facilitate access and modifications.

Efficient algorithm
-------------------

-> Usual measure of efficiency is speed - how long an algorithm takes to produce the result. 	

Hard problems(NP-Complete)
-------------------------

-> No efficient algorithm for an NP-Complete problem has ever been found.
-> If an efficient algorithm exists for one of them, then efficient algorithms exist for all of them.
-> Several NP-complete problems are similar, but not identical, to problems for which we do know of efficient algorithms.

Parallelism
-----------

-> In order to perform more computations per second, therefore, chips are being designed to contain not just one but several processing “cores.”
-> We can liken these multicore computers to several sequential computers on a single chip; in other words, they are a type of “parallel computer.”
-> In order to elicit the best performance from multicore computers, we need to design algorithms with parallelism in mind.
-> We need multithreaded algorithms which take advantage of multiple cores.

Exercises
----------

1.1-1

Give a real-world example that requires sorting or a real-world example that requires computing a convex hull.

Solution:

-> In order to get top 10 rated movies from IMDB, it requires sorting.

1.1-2
Other than speed, what other measures of efficiency might one use in a real-world setting?

Solution:

-> Cost( material cost)

1.1-3

Select a data structure that you have seen previously, and discuss its strengths and limitations.

Solution:

Stack strengths -> 





1.1-4
How are the shortest-path and traveling-salesman problems given above similar?
How are they different?
1.1-5
Come up with a real-world problem in which only the best solution will do. Then
come up with one in which a solution that is “approximately” the best is good
enough.